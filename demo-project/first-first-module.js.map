{"version":3,"sources":["webpack:///./src/app/first/first-routing.module.ts","webpack:///./src/app/first/first.component.css","webpack:///./src/app/first/first.component.html","webpack:///./src/app/first/first.component.ts","webpack:///./src/app/first/first.module.ts","webpack:///./src/app/shared/directives/allow-only-number.directive.ts"],"names":[],"mappings":"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","file":"first-first-module.js","sourcesContent":["import { FirstComponent } from './first.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'first',\n    pathMatch: 'full'\n  },\n  { path: 'first', component: FirstComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FirstRoutingModule { }\n","module.exports = \".steps ul {\\r\\n    margin:  0 0.83rem  !important;\\r\\n}\\r\\n.steps {\\r\\n    font-family   : \\\"Roboto-Regular\\\", Arial, Helvetica, sans-serif;\\r\\n    padding-top   : 5px;\\r\\n    padding-bottom: 5px;\\r\\n}\\r\\n.steps,\\r\\n.steps ul {\\r\\n    display: flex\\r\\n}\\r\\n.steps ul {\\r\\n    margin          : 0 1.75rem;\\r\\n    padding-left    : 0;\\r\\n    list-style      : none;\\r\\n    background-color: #e6e8ed;\\r\\n    align-items     : flex-start;\\r\\n    flex-wrap       : nowrap;\\r\\n}\\r\\n.steps li {\\r\\n    position : relative;\\r\\n    overflow : hidden;\\r\\n    max-width: 100%;\\r\\n    cursor   : pointer;\\r\\n}\\r\\n.steps li:first-child:before {\\r\\n    display: none\\r\\n}\\r\\n.steps li:before {\\r\\n    content                   : \\\"\\\";\\r\\n    position                  : absolute;\\r\\n    top                       : 2px;\\r\\n    left                      : -.875rem;\\r\\n    z-index                   : 1;\\r\\n    display                   : block;\\r\\n    height                    : 1.75rem;\\r\\n    width                     : 1.75rem;\\r\\n    border                    : 2px solid #fff;\\r\\n    background-color          : #e6e8ed;\\r\\n    -webkit-transform         : rotate(45deg);\\r\\n    transform                 : rotate(45deg)\\r\\n}\\r\\n.steps li:hover+li:before,\\r\\n.steps li:hover a {\\r\\n    /* // background-color: #dde0e7 */\\r\\n}\\r\\n.steps li:hover a {\\r\\n    text-decoration: none\\r\\n}\\r\\n.steps a {\\r\\n    display      : block;\\r\\n    padding      : 5px .875rem 6px 1.75rem;\\r\\n    text-align   : center;\\r\\n    color        : #363642;\\r\\n    line-height  : 1.25rem;\\r\\n    overflow     : hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    white-space  : nowrap\\r\\n}\\r\\n.steps a:focus,\\r\\n.steps a:hover {\\r\\n    text-decoration: none\\r\\n}\\r\\n.steps a>span:last-child {\\r\\n    margin-left: 5px\\r\\n}\\r\\n.steps .active+li:before,\\r\\n.steps .active a {\\r\\n    background-color: #2865dc\\r\\n}\\r\\n.steps .active .step-indicator,\\r\\n.steps .active a {\\r\\n    color: #fff\\r\\n}\\r\\n.steps .active:hover+li:before,\\r\\n.steps .active:hover a {\\r\\n    background-color: #1c4596\\r\\n}\\r\\n.steps .active:hover a {\\r\\n    color: #fff\\r\\n}\\r\\n.steps .success+li:before,\\r\\n.steps .success a {\\r\\n    background-color: #00a28a\\r\\n}\\r\\n.steps .success .step-indicator,\\r\\n.steps .success a {\\r\\n    color: #fff\\r\\n}\\r\\n.steps .success:hover+li:before,\\r\\n.steps .success:hover a {\\r\\n    background-color: #00937d\\r\\n}\\r\\n.steps .success:hover a {\\r\\n    color: #fff\\r\\n}\\r\\n.steps .error+li:before,\\r\\n.steps .error a {\\r\\n    background-color: #ea6759\\r\\n}\\r\\n.steps .error .step-indicator,\\r\\n.steps .error a {\\r\\n    color: #fff\\r\\n}\\r\\n.steps .error:hover+li:before,\\r\\n.steps .error:hover a {\\r\\n    background-color: #e85b4b\\r\\n}\\r\\n.steps .error:hover a {\\r\\n    color: #fff\\r\\n}\\r\\n.steps-float {\\r\\n    margin           : 0;\\r\\n    -webkit-transform: translate3d(0, -50%, 0);\\r\\n    transform        : translate3d(0, -50%, 0)\\r\\n}\\r\\n.steps li:before {\\r\\n    content                : \\\"\\\";\\r\\n    position               : absolute;\\r\\n    top                    : 2px;\\r\\n    left                   : -.83rem;\\r\\n    z-index                : 1;\\r\\n    display                : block;\\r\\n    height                 : 1.75rem;\\r\\n    width                  : 1.75rem;\\r\\n    border                 : 2px solid #fff;\\r\\n    border-top-right-radius: .5rem;\\r\\n    background-color       : #e6e8ed;\\r\\n    -webkit-transform      : rotate(45deg);\\r\\n    transform              : rotate(45deg)\\r\\n}\\r\\n.steps a {\\r\\n    display      : block;\\r\\n    padding      : 5px .83rem 6px 1.75rem;\\r\\n    text-align   : center;\\r\\n    color        : #363642;\\r\\n    line-height  : 1.25rem;\\r\\n    overflow     : hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    white-space  : nowrap\\r\\n}\\r\\n.col-xl-3{\\r\\n    max-width: 22% !important;\\r\\n}\\r\\n.card-header{\\r\\n    background-color: #308DFF !important;\\r\\n    color: white !important;\\r\\n}\\r\\n\"","module.exports = \"<!-- <p>\\n  first works!\\n</p> -->\\n<!-- <nav>\\n  <ul>\\n    <li><a routerLink=\\\"/dashboard/header\\\" routerLinkActive=\\\"active\\\">First Component</a></li>\\n    <li><a routerLink=\\\"/dashboard/home\\\">Second Component</a></li>\\n  </ul>\\n</nav>\\n<input type=\\\"text\\\" appAllowOnlyNumber> -->\\n<!-- <h1 class=\\\"text-center\\\">Encrypt-Decrypt with AES</h1>  \\n  \\n<br>  \\n<div>  \\n  <div class=\\\"row\\\">  \\n    <div class=\\\"col-sm-6\\\">  \\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">  \\n        Encryption  \\n      </button>  \\n      <br>  \\n      <div class=\\\"form-group\\\">  \\n        <label for=\\\"txtTextToConvert\\\">Plain Text</label>  \\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text you want to encrypt\\\" [(ngModel)]=\\\"plainText\\\">  \\n      </div>  \\n  \\n      <div class=\\\"form-group\\\">  \\n        <label for=\\\"txtPassword\\\">Password</label>  \\n        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter encryption password\\\" [(ngModel)]=\\\"encPassword\\\">  \\n      </div>  \\n      <textarea class=\\\"form-control\\\" readonly rows=\\\"3\\\">{{conversionEncryptOutput}}</textarea>  \\n      <br>  \\n      <button type=\\\"button\\\" class=\\\"btn btn-success float-right\\\" (click)=\\\"convertText('encrypt')\\\">Encrypt</button>  \\n    </div>  \\n    <div class=\\\"col-sm-6\\\">  \\n      <button type=\\\"button\\\" class=\\\"btn btn-dark btn-lg btn-block\\\">  \\n        Decryption  \\n      </button>  \\n      <br>  \\n      <div class=\\\"form-group\\\">  \\n        <label for=\\\"txtTextToConvert\\\">Encrypted Text</label>  \\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text you want to decrypt\\\" [(ngModel)]=\\\"encryptText\\\">  \\n      </div>  \\n  \\n      <div class=\\\"form-group\\\">  \\n        <label for=\\\"txtPassword\\\">Password</label>  \\n        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter decryption password\\\" [(ngModel)]=\\\"decPassword\\\">  \\n      </div>  \\n      <textarea class=\\\"form-control\\\" readonly rows=\\\"3\\\">{{conversionDecryptOutput}}</textarea>  \\n      <br>  \\n      <button type=\\\"button\\\" class=\\\"btn btn-success float-right\\\" (click)=\\\"convertText('decrypt')\\\">Decrypt</button>  \\n    </div>  \\n  </div>  \\n</div>  -->\\n<div class=\\\"row\\\" style=\\\"padding-left: 10rem;padding-top: 6rem;\\\">\\n  <div class=\\\"col-xl-3 pb-5 pt-5 pr-3\\\" (click)=\\\"openPopup()\\\" *ngFor=\\\"let process of processList\\\">\\n    <div class=\\\"card\\\">\\n      <!-- <div class=\\\"card-header border-0\\\">\\n        {{process.title}}\\n      </div> -->\\n      <div class=\\\"card-body text-center\\\">\\n        <h5 class=\\\"card-title\\\">{{process.label}}</h5>\\n        <p class=\\\"card-text\\\">{{process.description}}</p>\\n        <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a> -->\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<ng-template #parameterWizard let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\"> <Strong>Create Parameter\\n      </Strong><br>\\n    </h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"d('close')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"col-12 px-0\\\">\\n      <div class=\\\"steps\\\" [ngClass]=\\\"{'border-bottom mt-10 mb-10 pt-10 pb-10': settings.showHrLine}\\\" role=\\\"tablist\\\">\\n        <ul>\\n          <li *ngFor=\\\"let step of data; let i=index\\\" (click)=\\\"onclick(step, i)\\\" (change)=\\\"emitdata(step, i)\\\"\\n            [ngClass]=\\\"{'active': step.active}\\\" class=\\\"step\\\"> <!--, 'disableWizardStep': !step.active-->\\n            <a class=\\\"step-trigger\\\">\\n               <span class=\\\"d-none d-sm-inline\\\">{{step.label}}</span></a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"currentStep === 1\\\">\\n      <h5> <Strong>Create Parameter Attribute</Strong><br></h5>\\n    </div>\\n    <div *ngIf=\\\"currentStep === 2\\\">\\n      <h5> <Strong>Create Parameter Type</Strong><br></h5>\\n    </div>\\n    <div *ngIf=\\\"currentStep === 3\\\">\\n      <h5> <Strong>Create Parameter</Strong><br></h5>\\n    </div>\\n    <div *ngIf=\\\"currentStep === 4\\\">\\n      <h5> <Strong>General Parameter Set/Site Parameter Set</Strong><br></h5>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-action\\\" data-dismiss=\\\"modal\\\"\\n      (click)=\\\"d('close')\\\">Cancel</button>\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-action\\\" (click)=\\\"d('close')\\\">\\n      Proceed\\n    </button> -->\\n  </div>\\n</ng-template>\\n\"","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { DashboardService } from 'src/app/shared/services/dashboard.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import * as CryptoJS from 'crypto-js'; \n\n\n@Component({\n  selector: 'app-first',\n  templateUrl: './first.component.html',\n  styleUrls: ['./first.component.css']\n})\nexport class FirstComponent implements OnInit {\n\n  constructor(private dashboardService : DashboardService,private _router: Router,private modalService: NgbModal,private http: HttpClient) { \n    this.getJSON().subscribe(responseJson => {\n\n      if (responseJson && responseJson.status) {\n        this.processList=responseJson.data.processes\n        \n        }\n    });\n    \n  }\n  public pass=\"99\";\n  title = 'EncryptionDecryptionSample';  \n  currentStep = 0;\n  public popupModal;\n  plainText:string;  \n  encryptText: string;  \n  encPassword: string;  \n  decPassword:string;  \n  conversionEncryptOutput: string;  \n  conversionDecryptOutput:string;  \n  public processList: any = [];\n  public data = [\n    {\n      label: 'Step 1',\n      stepnumber : '1'\n    },\n    {\n      label: 'Step 2',\n      stepnumber : '2'\n    },\n    {\n      label: 'Step 3',\n      stepnumber : '3'\n    },\n    {\n      label: 'Step 4',\n      stepnumber : '4'\n    }\n  ]\n  settings = {\n    showHrLine: true // Horizontal Line\n  };\n  @ViewChild('parameterWizard') parameterWizard;\n  public modal_options: NgbModalOptions = {\n    size: 'lg',\n    backdrop: 'static'\n  };\n  private _jsonURL = 'assets/jsons/processList.json';\n  // @HostListener('paste',['$event']) blockPaste(event) {\n  //   console.log('uuuu')\n  //   event.preventDefault();\n  // }\n  ngOnInit() {\n    // console.log(this.dashboardService.mainResult)\n    // let url = `/dashboard/header/${this.pass}`\n    // this._router.navigate([url]);\n  }\n  // convertText(conversion:string) {  \n  //   if (conversion==\"encrypt\") {  \n  //     this.conversionEncryptOutput = CryptoJS.AES.encrypt(this.plainText.trim(), this.encPassword.trim()).toString();  \n  //   }  \n  //   else {  \n  //     this.conversionDecryptOutput = CryptoJS.AES.decrypt(this.encryptText.trim(), this.decPassword.trim()).toString(CryptoJS.enc.Utf8);  \n     \n  // }  \n  onclick(step,i) {\n    try {\n      this.currentStep = i+1;\n      if (step['stepnumber']) {\n        this.stepUpdate(step['stepnumber']);\n      }\n      // this.step.emit(step);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  stepUpdate(number) {\n    try {\n      this.data.forEach((eachStep) => {\n        if (eachStep['stepnumber'] === number) {\n          eachStep['active'] = true;\n        } else {\n          eachStep['active'] = false;\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  openPopup(){\n    this.popupModal = this.modalService.open(this.parameterWizard,this.modal_options);\n  }\n  public getJSON(): Observable<any> {\n    return this.http.get(this._jsonURL);\n  }\n}  \n\n","import { AllowOnlyNumberDirective } from './../shared/directives/allow-only-number.directive';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FirstRoutingModule } from './first-routing.module';\nimport { FirstComponent } from './first.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FirstRoutingModule,FormsModule \n  ],\n  declarations: [FirstComponent,AllowOnlyNumberDirective]\n})\nexport class FirstModule { }\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appAllowOnlyNumber]'\n})\nexport class AllowOnlyNumberDirective {\n\n  constructor(el: ElementRef) { }\n  @HostListener('paste',['$event']) blockPaste(event) {\n    console.log('uuuu')\n    event.preventDefault();\n  }\n\n}\n"],"sourceRoot":""}